defmodule MetaStore.Aggregates.CollectionLifespan do
  @moduledoc """
  Create and manage collections

  Collections are immutable datasets that are mostly the result of
  one or more transformations on another collection. There are two
  types of collections: regular and source collections. The very first
  collection in a pipeline is a source collection, which is simply a
  copy of a source.

  Users can only create source collections, as all downstream collections
  should be autogenerated from a transformer.

  TODO: Non source collections should have a lock, ensuring that they
  are not edited while pending a transformation result, which can be
  restricted futher by the worker currently computing that fragment.
  """

  @behaviour Commanded.Aggregates.AggregateLifespan

  alias Core.Events.CollectionDeleted

  # Source collections may be recreated with the same id, so we should
  # come back to life if that happens. Normal collections can just
  # shutdown normally.
  def after_event(%CollectionDeleted{type: "source"}), do: :hibernate
  def after_event(%CollectionDeleted{type: "collection"}), do: :stop

  def after_event(_event), do: :infinity
  def after_command(_command), do: :infinity
  def after_error(_error), do: :stop
end

